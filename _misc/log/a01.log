(pprof) top50
353.97s of 455.68s total (77.68%)
Dropped 236 nodes (cum <= 2.28s)
Showing top 50 nodes out of 185 (cum >= 6.31s)
      flat  flat%   sum%        cum   cum%
    38.67s  8.49%  8.49%     38.67s  8.49%  runtime.futex
    36.09s  7.92% 16.41%     36.09s  7.92%  runtime.memclr
    26.07s  5.72% 22.13%    117.30s 25.74%  runtime.mallocgc
    22.94s  5.03% 27.16%     24.56s  5.39%  runtime.scanblock
    19.38s  4.25% 31.41%     19.52s  4.28%  runtime.heapBitsSetType
    17.61s  3.86% 35.28%     35.09s  7.70%  regexp.(*machine).tryBacktrack
    14.39s  3.16% 38.44%     49.17s 10.79%  runtime.growslice
    14.11s  3.10% 41.53%     14.11s  3.10%  runtime.usleep
    11.62s  2.55% 44.08%     11.62s  2.55%  runtime.mSpan_Sweep.func1
    11.09s  2.43% 46.52%     15.34s  3.37%  runtime.scanobject
     9.03s  1.98% 48.50%     10.91s  2.39%  unicode.SimpleFold
     7.82s  1.72% 50.22%     51.45s 11.29%  regexp/syntax.(*parser).parseClass
     7.14s  1.57% 51.78%      7.14s  1.57%  runtime.xchg
     6.87s  1.51% 53.29%      6.87s  1.51%  runtime._ExternalCode
     6.03s  1.32% 54.61%     28.03s  6.15%  runtime.mSpan_Sweep
     5.31s  1.17% 55.78%     17.13s  3.76%  runtime.heapBitsSweepSpan
     5.16s  1.13% 56.91%    107.99s 23.70%  regexp/syntax.Parse
     4.88s  1.07% 57.98%     33.97s  7.45%  regexp/syntax.(*compiler).compile
     4.64s  1.02% 59.00%      4.64s  1.02%  regexp.(*bitState).push
     4.56s  1.00% 60.00%     19.46s  4.27%  regexp/syntax.(*parser).push
     3.92s  0.86% 60.86%     21.44s  4.71%  regexp/syntax.(*compiler).rune
     3.89s  0.85% 61.71%      3.89s  0.85%  runtime.memmove
     3.88s  0.85% 62.57%     66.53s 14.60%  runtime.makeslice
     3.83s  0.84% 63.41%      3.83s  0.84%  runtime.heapBitsForObject
     3.75s  0.82% 64.23%     88.82s 19.49%  runtime.newarray
     3.72s  0.82% 65.05%      3.72s  0.82%  regexp.(*inputBytes).step
     3.52s  0.77% 65.82%      4.49s  0.99%  regexp/syntax.(*parser).maybeConcat
     3.21s   0.7% 66.52%      8.41s  1.85%  regexp/syntax.(*Inst).MatchRunePos
     3.20s   0.7% 67.22%      3.20s   0.7%  regexp/syntax.(*Regexp).MaxCap
     2.95s  0.65% 67.87%      2.95s  0.65%  runtime.prefetchnta
     2.92s  0.64% 68.51%      2.92s  0.64%  runtime.cas
     2.91s  0.64% 69.15%     18.16s  3.99%  regexp/syntax.(*parser).collapse
     2.78s  0.61% 69.76%      4.08s   0.9%  runtime.greyobject
     2.67s  0.59% 70.35%      4.95s  1.09%  runtime.mprof_GC
     2.54s  0.56% 70.91%      2.54s  0.56%  runtime.readvarint
     2.51s  0.55% 71.46%      2.76s  0.61%  regexp/syntax.(*Regexp).Simplify
     2.49s  0.55% 72.00%      3.05s  0.67%  regexp/syntax.(*parser).factor
     2.35s  0.52% 72.52%     93.30s 20.47%  regexp.(*machine).backtrack
     2.35s  0.52% 73.03%      4.25s  0.93%  runtime.mHeap_AllocSpanLocked
     2.32s  0.51% 73.54%      2.32s  0.51%  runtime.(*bucket).mp
     2.24s  0.49% 74.03%      2.96s  0.65%  runtime.mHeap_FreeSpanLocked
     2.18s  0.48% 74.51%     10.77s  2.36%  regexp/syntax.appendRange
     2.15s  0.47% 74.98%    139.05s 30.51%  runtime.systemstack
     1.92s  0.42% 75.41%     28.11s  6.17%  runtime.newobject
     1.88s  0.41% 75.82%      3.60s  0.79%  regexp/syntax.nextRune
     1.80s   0.4% 76.21%     11.62s  2.55%  runtime.gentraceback
     1.75s  0.38% 76.60%     41.17s  9.03%  runtime.mCentral_CacheSpan
     1.68s  0.37% 76.97%      5.23s  1.15%  runtime.writebarrierptr_nostore1
     1.66s  0.36% 77.33%     28.63s  6.28%  runtime.findrunnable
     1.59s  0.35% 77.68%      6.31s  1.38%  regexp/syntax.(*parser).parsePerlClassEscape

(master)$go test -bench . -benchmem
PASS
BenchmarkUnquote-3     	  100000	     21531 ns/op	   41681 B/op	      36 allocs/op
BenchmarkGetType-3     	   30000	     54687 ns/op	   88609 B/op	     111 allocs/op
BenchmarkGetValue-3    	   30000	     58323 ns/op	   88881 B/op	     114 allocs/op
BenchmarkGetName-3     	   30000	     57848 ns/op	   88609 B/op	     111 allocs/op
BenchmarkEscapeHTML-3  	   20000	     66991 ns/op	  162562 B/op	     118 allocs/op
BenchmarkFillInput-3   	   10000	    250520 ns/op	  360820 B/op	     485 allocs/op
BenchmarkFillTextarea-3	   10000	    188316 ns/op	  306565 B/op	     359 allocs/op
BenchmarkFillSelect-3  	    3000	    476042 ns/op	  573880 B/op	     981 allocs/op
BenchmarkFillOption-3  	   10000	    177789 ns/op	  235523 B/op	     378 allocs/op
BenchmarkFillinForm-3  	    1000	   2059087 ns/op	 2663466 B/op	    3861 allocs/op
ok  	github.com/sheercat/fillinform	21.246s

